name: 'Docker Semver Publisher'
description: |
  Sets up Docker and Builds the specified Container. Requires registry
  credentials for usage in order to leverage caching.
  Can optionally push image with Semver and SHA Tags

# jscpd:ignore-start
inputs:
  context:
    description: 'Docker Build Context'
    required: true
  platforms:
    description: 'Platforms to Build'
    required: true
    default: 'linux/amd64'
  push:
    description: 'Push images?'
    required: true
    default: false
  repository:
    description: 'Image Repository to use for caching and pushing'
    required: true
  semver_major:
    description: 'Major version to use for pushed semver tags'
    required: false
  semver_minor:
    description: 'Minor version to use for pushed semver tags'
    required: false
  semver_patch:
    description: 'Patch version to use for pushed semver tags'
    required: false
  registry:
    description: 'OCI Registry to use for caching and pushing'
    required: true
  username:
    description: 'OCI Registry Username'
    required: true
  password:
    description: 'OCI Registry Password'
    required: true
  sign:
    description: 'Sign images?'
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Install cosign
      if: inputs.sign != 'false'
      uses: sigstore/cosign-installer@v3.5.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set short git commit SHA
      id: git
      shell: bash
      run: echo "short_sha=$(git rev-parse --short ${{ github.sha }})" >> "$GITHUB_OUTPUT"
    # jscpd:ignore-end

    - name: Build container
      id: build
      uses: docker/build-push-action@v5
      env:
        DOCKER_BUILDKIT: 1
        BUILDKIT_INLINE_CACHE: 1
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: ${{ inputs.context }}
        push: ${{ inputs.push }}
        tags: |
          ${{ inputs.repository }}:latest
          ${{ inputs.repository }}:${{ steps.git.outputs.short_sha }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}.${{ inputs.semver_minor }}.${{ inputs.semver_patch }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}.${{ inputs.semver_minor }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}
        platforms: ${{ inputs.platforms }}

    - name: Sign the published images
      if: inputs.sign == 'true' && inputs.push == 'true'
      shell: bash
      env:
        TAGS: |
          ${{ inputs.repository }}:latest
          ${{ inputs.repository }}:${{ steps.git.outputs.short_sha }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}.${{ inputs.semver_minor }}.${{ inputs.semver_patch }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}.${{ inputs.semver_minor }}
          ${{ inputs.repository }}:v${{ inputs.semver_major }}
        DIGEST: ${{ steps.build.outputs.digest }}
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

    - name: Attest
      uses: actions/attest-build-provenance@v1
      id: attest
      with:
        subject-name: ${{ inputs.repository }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: ${{ inputs.push }}
    # jscpd:ignore-end
